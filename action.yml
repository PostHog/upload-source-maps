name: "ablaszkiewicz/posthog-upload-sourcemaps"

description: "Inject and upload sourcemaps with posthog-cli"

author: "ablaszkiewicz"

branding:
  icon: upload-cloud
  color: purple

inputs:
  directory:
    description: "Directory containing built assets (e.g., dist)"
    required: true
  cli-token:
    description: "PostHog CLI token"
    required: true
  env-id:
    description: "PostHog environment ID"
    required: true
  project:
    description: "Project identifier. Defaults to input from this flag. If not provided, it tries to read git repository name. If neither available, it throws an error"
    required: false
  version:
    description: "Release/version (e.g., commit SHA). Defaults to input from this flag. If not provided, it tries to read current commit SHA. If neither available, it throws an error"
    required: false
  host:
    description: "PostHog host URL. If you're on the US PostHog host, you don't need to provide this. If you're on the EU host, provide `https://eu.posthog.com`"
    required: false

runs:
  using: "composite"
  steps:
    - name: Install posthog CLI
      shell: bash
      run: npm i -g @posthog/cli@0.4.6

    - name: Upload sourcemaps
      shell: bash
      env:
        POSTHOG_CLI_ENV_ID: ${{ inputs.env-id }}
        POSTHOG_CLI_TOKEN: ${{ inputs.cli-token }}
      run: |
        set -euo pipefail
        global_args=()
        if [ -n "${{ inputs.host }}" ]; then
          global_args+=(--host "${{ inputs.host }}")
        fi
        args=(--directory "${{ inputs.directory }}")
        if [ -n "${{ inputs.project }}" ]; then
          args+=(--project "${{ inputs.project }}")
        fi
        if [ -n "${{ inputs.version }}" ]; then
          args+=(--version "${{ inputs.version }}")
        fi
        posthog-cli "${global_args[@]}" sourcemap process "${args[@]}"
